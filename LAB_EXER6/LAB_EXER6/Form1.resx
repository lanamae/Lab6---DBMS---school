<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCADCAR0DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDZOc9aTn1pxHJpK9y51CHNJk0tIaBiHPrTTn1p2KQjNNAMOfWk
        yafimkVVxjcmk5p2KMe1O4Cc04E+tJilAobEOGaeM00CnqKhkscM09c+tNAp6iobJY4Z9aeCaaBT8VLI
        YuTTgTjrSAUoFSZsXJpcmkFKKVzNi8+tHNFFBmw59aOfWlpKZlIOfWjn1oopmTEJNGTQetJVGbDJoyaK
        KpGTQZNJk+tLSUyWGT60uTSUUE2KpHNJipCOaTFZ3PqLkZFIRUpFJtp3Ai20mKm20hWncZDtpMVNtpNt
        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
</value>
  </data>
</root>